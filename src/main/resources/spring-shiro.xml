<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
		
	<!-- 数据源 -->
   <!--  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
        <property name="url" value="jdbc:hsqldb:mem:shiro-spring"/>
        <property name="username" value="sa"/>
    </bean>
     -->

     <!--配置securityManager 
     1.shiro核心组件,配置shiro安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
   		<!--  <property name="cacheManager" ref="cacheManager"/> -->
      	 <property name="realm" ref="userRealm"/>
    </bean>
    
	<!-- 2.配置cacheManager(缓存)
		需要加入ehcache 的jar包
		然后添加配置文件
	 -->
	
    <!-- <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
    </bean> -->

         <!-- 配置realm 
         	3.1直接配置实现了realm接口的ShiroRealm(自己写的)
         -->
    <bean id="userRealm" class="cn.tedu.ttms.common.reaml.UserRealm">
    	<property name="credentialsMatcher">
    		<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
    			<property name="hashAlgorithmName" value="MD5"></property>
    			<!-- 加密次数 -->
    			<property name="hashIterations" value="1024"></property>
    		</bean>
    	</property>
    </bean>

     <!-- 
     
     4.Shiro生命周期处理器 可以自动的调 用配置在SpringIOC容器中shirobean的生命周期方法
     
     -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

	<!-- 
		5.启用ioc容器中使用shiro的注解,但必须在配置了lifecycleBeanPostProcessor之后可以使用
	 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>


	<!-- 
		6. 配置shiroFilter
		6.1:id必须和web.xml文件中配置的DelegatingFilterProxy的<filter-name>一致
			若不一致,则会拋出:NoSuchBeanDefinitionException.因为Shiro 会来IOC容器中查找<filter-name>名字对应的filter bean	
	-->
	
	

    <!-- shiro工厂bean配置 -->
    
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
     <!-- shiro的核心安全接口 -->
        <property name="securityManager" ref="securityManager"/>
        
         <!-- 要求登录时的连接 -->
        <property name="loginUrl" value="/toLogin.do"/>
        
          <!-- 登录成功后要跳转的连接(此处已经在登录中处理了) -->
        <!-- <property name="successUrl" value="/list.jsp"/> -->
        
          <!-- 访问未对其授权的资源时,要跳转的连接 -->
       <!--  <property name="unauthorizedUrl" value="/unauthorized.jsp"/> -->
        
        	<!-- 配置哪些页面需要受保护 ,以及访问这些页面需要的权限
					1).  anon 代表匿名可以访问
					2).  authc必须认证(即登录)后才可以访问的页面
					4).  第一次配置为主
					5). logout登出
			-->
       	  <!-- shiro连接约束配置 -->
        <property name="filterChainDefinitions">
            <value>
         		 /images/** = anon
                 /js/** = anon
                 /css/** = anon
                 /static/** = anon
                 /bootstrap/** = anon
                 /jquery/** = anon
                 
                 /confirmUser.do = anon
                 /indexUI.do=anon
                /logout.do=logout
                
                /** = authc
            </value>
        </property>
    </bean>
		
</beans>